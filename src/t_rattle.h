// Rattle for prepared strings// ï¿½2006 Thomas Resch// www.zippernoise.net// ported to c from Stefan Belbaos's Prepared Piano																									/*																									    *//*-------------------------------------------struct t_rattle------------------------------------------*//*	  														*/#include "t_std.h"typedef struct _t_rattle{    double nextRattle; double rattle; double lastRattle; //double *rattleForce;    double rattleForce[MAXNUMBEROFSTRINGS]; double rattleMassDensityRatio;  // Rattle/String... double rattleFrequency; // fundamentalFreqRattle //double *rattlePosition;    double rattlePosition[MAXNUMBEROFSTRINGS]; double rattleLength; double dt; double dx; double dt_2; double w_2; double normRattleIndex;     int rattleIndex; int rattleOn; int NS;} t_rattle;t_rattle *t_rattle_new(double rattleFrequency_, double rattleMassDensityRatio_, double rattleLength_, int NS_);void t_rattle_free(t_rattle *x);void t_rattle_perform(t_rattle *x, double ***nextString, double ***string);void t_rattle_calculateRattleIndex(t_rattle *x, double normRattleIndex);void t_rattle_setRattleParameters(t_rattle *x, double fundamentalFreq, double massDensityRatio, double rattleLength);void t_rattle_setFundamentalFrequency(t_rattle *x, double fundamentalFreq);void t_rattle_setMassDensityRatio(t_rattle *x, double massDensityRatio);void t_rattle_setRattleLength(t_rattle *x, double rattleLength);void t_rattle_set_dxdt(t_rattle *x, double dx_, double dt_);void t_rattle_reset(t_rattle *x);